import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardFooter } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import Icon from '@/components/ui/icon';

interface Product {
  id: number;
  name: string;
  description: string;
  price: number;
  category: string;
  origin: string;
  image: string;
  fullDescription?: string;
  characteristics?: {
    weight: string;
    brewing: string;
    temperature: string;
    taste: string;
  };
}

interface CartItem extends Product {
  quantity: number;
}

const products: Product[] = [
  {
    id: 1,
    name: '–î–∞ –•—É–Ω –ü–∞–æ',
    description: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —É—Ç—ë—Å–Ω—ã–π —É–ª—É–Ω —Å –≥–ª—É–±–æ–∫–∏–º –º–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–º –≤–∫—É—Å–æ–º',
    price: 2800,
    category: '–£–ª—É–Ω',
    origin: '–ö–∏—Ç–∞–π',
    image: 'üçµ',
    fullDescription: '–î–∞ –•—É–Ω –ü–∞–æ ‚Äî –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–∏—Ç–∞–π—Å–∫–∏—Ö —É—Ç—ë—Å–Ω—ã—Ö —É–ª—É–Ω–æ–≤, –ø—Ä–æ–∏–∑—Ä–∞—Å—Ç–∞—é—â–∏–π –≤ –≥–æ—Ä–∞—Ö –£–∏—à–∞–Ω—å. –≠—Ç–æ—Ç —á–∞–π –æ–±–ª–∞–¥–∞–µ—Ç –≥–ª—É–±–æ–∫–∏–º –º–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–º –≤–∫—É—Å–æ–º —Å –Ω–æ—Ç–∞–º–∏ –∂–∞—Ä–µ–Ω—ã—Ö –æ—Ä–µ—Ö–æ–≤, –∫–∞—Ä–∞–º–µ–ª–∏ –∏ –ª—ë–≥–∫–æ–π —Ç–µ—Ä–ø–∫–æ—Å—Ç—å—é. –ù–∞—Å—Ç–æ–π –∏–º–µ–µ—Ç —è—Ä–∫–∏–π —è–Ω—Ç–∞—Ä–Ω—ã–π —Ü–≤–µ—Ç –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ—Å–ª–µ–≤–∫—É—Å–∏–µ.',
    characteristics: {
      weight: '50 –≥—Ä–∞–º–º',
      brewing: '5-7 –ø—Ä–æ–ª–∏–≤–æ–≤',
      temperature: '95-100¬∞C',
      taste: '–ú–∏–Ω–µ—Ä–∞–ª—å–Ω—ã–π, –æ—Ä–µ—Ö–æ–≤—ã–π, –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–π'
    }
  },
  {
    id: 2,
    name: '–°–µ—Ä–µ–±—Ä—è–Ω—ã–µ –∏–≥–ª—ã',
    description: '–ò–∑—ã—Å–∫–∞–Ω–Ω—ã–π –±–µ–ª—ã–π —á–∞–π –∏–∑ –Ω–µ–∂–Ω—ã—Ö –ø–æ—á–µ–∫',
    price: 3200,
    category: '–ë–µ–ª—ã–π —á–∞–π',
    origin: '–ö–∏—Ç–∞–π',
    image: 'ü´ñ',
    fullDescription: '–°–µ—Ä–µ–±—Ä—è–Ω—ã–µ –∏–≥–ª—ã ‚Äî —ç–ª–∏—Ç–Ω—ã–π –±–µ–ª—ã–π —á–∞–π –∏–∑ –ø—Ä–æ–≤–∏–Ω—Ü–∏–∏ –§—É—Ü–∑—è–Ω—å, —Å–æ—Å—Ç–æ—è—â–∏–π –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏–∑ –Ω–µ–∂–Ω—ã—Ö –ø–æ—á–µ–∫, –ø–æ–∫—Ä—ã—Ç—ã—Ö —Å–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–º –≤–æ—Ä—Å–æ–º. –ß–∞–π –æ–±–ª–∞–¥–∞–µ—Ç –¥–µ–ª–∏–∫–∞—Ç–Ω—ã–º —Å–ª–∞–¥–∫–æ–≤–∞—Ç—ã–º –≤–∫—É—Å–æ–º —Å —Ü–≤–µ—Ç–æ—á–Ω—ã–º–∏ –Ω–æ—Ç–∞–º–∏ –∏ –º–µ–¥–æ–≤—ã–º –∞—Ä–æ–º–∞—Ç–æ–º.',
    characteristics: {
      weight: '30 –≥—Ä–∞–º–º',
      brewing: '3-4 –ø—Ä–æ–ª–∏–≤–∞',
      temperature: '70-80¬∞C',
      taste: '–¶–≤–µ—Ç–æ—á–Ω—ã–π, –º–µ–¥–æ–≤—ã–π, —Å–ª–∞–¥–∫–æ–≤–∞—Ç—ã–π'
    }
  },
  {
    id: 3,
    name: '–ú–∞—Ç—á–∞ —Ü–µ—Ä–µ–º–æ–Ω–∏–∞–ª—å–Ω–∞—è',
    description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è –º–∞—Ç—á–∞ –¥–ª—è —á–∞–π–Ω–æ–π —Ü–µ—Ä–µ–º–æ–Ω–∏–∏',
    price: 4500,
    category: '–ó–µ–ª—ë–Ω—ã–π —á–∞–π',
    origin: '–Ø–ø–æ–Ω–∏—è',
    image: 'üçÉ',
    fullDescription: '–¶–µ—Ä–µ–º–æ–Ω–∏–∞–ª—å–Ω–∞—è –º–∞—Ç—á–∞ –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–∑ –ø—Ä–µ—Ñ–µ–∫—Ç—É—Ä—ã –ö–∏–æ—Ç–æ. –ü–æ—Ä–æ—à–∫–æ–≤—ã–π –∑–µ–ª—ë–Ω—ã–π —á–∞–π —Å —è—Ä–∫–∏–º –∏–∑—É–º—Ä—É–¥–Ω—ã–º —Ü–≤–µ—Ç–æ–º, –±–æ–≥–∞—Ç—ã–º —É–º–∞–º–∏-–≤–∫—É—Å–æ–º –∏ –∫—Ä–µ–º–æ–≤–æ–π —Ç–µ–∫—Å—Ç—É—Ä–æ–π. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–π —á–∞–π–Ω–æ–π —Ü–µ—Ä–µ–º–æ–Ω–∏–∏.',
    characteristics: {
      weight: '30 –≥—Ä–∞–º–º',
      brewing: '–í–∑–±–∏–≤–∞–µ—Ç—Å—è –≤–µ–Ω—á–∏–∫–æ–º',
      temperature: '70-80¬∞C',
      taste: '–£–º–∞–º–∏, —Å–ª–∞–¥–∫–æ–≤–∞—Ç—ã–π, —Ç—Ä–∞–≤—è–Ω–∏—Å—Ç—ã–π'
    }
  },
  {
    id: 4,
    name: '–ü—É—ç—Ä –®—ç–Ω 15 –ª–µ—Ç',
    description: '–í—ã–¥–µ—Ä–∂–∞–Ω–Ω—ã–π —Å—ã—Ä–æ–π –ø—É—ç—Ä —Å –±–æ–≥–∞—Ç—ã–º –±—É–∫–µ—Ç–æ–º',
    price: 5200,
    category: '–ü—É—ç—Ä',
    origin: '–ö–∏—Ç–∞–π',
    image: 'üåø',
    fullDescription: '–í—ã–¥–µ—Ä–∂–∞–Ω–Ω—ã–π —Å—ã—Ä–æ–π –ø—É—ç—Ä —Å 15-–ª–µ—Ç–Ω–µ–π —Ñ–µ—Ä–º–µ–Ω—Ç–∞—Ü–∏–µ–π –∏–∑ –ø—Ä–æ–≤–∏–Ω—Ü–∏–∏ –Æ–Ω—å–Ω–∞–Ω—å. –û–±–ª–∞–¥–∞–µ—Ç —Å–ª–æ–∂–Ω—ã–º –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω—ã–º –≤–∫—É—Å–æ–º —Å –¥—Ä–µ–≤–µ—Å–Ω—ã–º–∏, —Ñ—Ä—É–∫—Ç–æ–≤—ã–º–∏ –∏ –∑–µ–º–ª—è–Ω—ã–º–∏ –Ω–æ—Ç–∞–º–∏. –° –≥–æ–¥–∞–º–∏ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –ª—É—á—à–µ.',
    characteristics: {
      weight: '100 –≥—Ä–∞–º–º (–±–ª–∏–Ω)',
      brewing: '7-10 –ø—Ä–æ–ª–∏–≤–æ–≤',
      temperature: '95-100¬∞C',
      taste: '–î—Ä–µ–≤–µ—Å–Ω—ã–π, —Ñ—Ä—É–∫—Ç–æ–≤—ã–π, –∑–µ–º–ª–∏—Å—Ç—ã–π'
    }
  },
  {
    id: 5,
    name: '–î–∞—Ä–¥–∂–∏–ª–∏–Ω–≥ First Flush',
    description: '–≠–ª–∏—Ç–Ω—ã–π —á—ë—Ä–Ω—ã–π —á–∞–π –ø–µ—Ä–≤–æ–≥–æ —Å–±–æ—Ä–∞',
    price: 2400,
    category: '–ß—ë—Ä–Ω—ã–π —á–∞–π',
    origin: '–ò–Ω–¥–∏—è',
    image: '‚òï',
    fullDescription: '–î–∞—Ä–¥–∂–∏–ª–∏–Ω–≥ –ø–µ—Ä–≤–æ–≥–æ —Å–±–æ—Ä–∞ ‚Äî ¬´—à–∞–º–ø–∞–Ω—Å–∫–æ–µ —Å—Ä–µ–¥–∏ —á–∞—ë–≤¬ª. –°–æ–±–∏—Ä–∞–µ—Ç—Å—è –≤ –º–∞—Ä—Ç–µ-–∞–ø—Ä–µ–ª–µ –≤ –≤—ã—Å–æ–∫–æ–≥–æ—Ä–Ω—ã—Ö —Å–∞–¥–∞—Ö –ò–Ω–¥–∏–∏. –°–≤–µ—Ç–ª—ã–π –Ω–∞—Å—Ç–æ–π —Å –º—É—Å–∫–∞—Ç–Ω—ã–º–∏ –Ω–æ—Ç–∞–º–∏, —Ü–≤–µ—Ç–æ—á–Ω—ã–º –∞—Ä–æ–º–∞—Ç–æ–º –∏ –æ—Å–≤–µ–∂–∞—é—â–µ–π —Ç–µ—Ä–ø–∫–æ—Å—Ç—å—é.',
    characteristics: {
      weight: '50 –≥—Ä–∞–º–º',
      brewing: '3-4 –º–∏–Ω—É—Ç—ã',
      temperature: '85-90¬∞C',
      taste: '–ú—É—Å–∫–∞—Ç–Ω—ã–π, —Ü–≤–µ—Ç–æ—á–Ω—ã–π, —Ç–µ—Ä–ø–∫–∏–π'
    }
  },
  {
    id: 6,
    name: '–¢–µ –ì—É–∞–Ω—å –ò–Ω—å',
    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —É–ª—É–Ω —Å —Ü–≤–µ—Ç–æ—á–Ω—ã–º –∞—Ä–æ–º–∞—Ç–æ–º',
    price: 3100,
    category: '–£–ª—É–Ω',
    origin: '–ö–∏—Ç–∞–π',
    image: 'üçµ',
    fullDescription: '–¢–µ –ì—É–∞–Ω—å –ò–Ω—å ‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–∏—Ç–∞–π—Å–∫–∏–π —É–ª—É–Ω –∏–∑ –ø—Ä–æ–≤–∏–Ω—Ü–∏–∏ –§—É—Ü–∑—è–Ω—å. –ù–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –±–æ–≥–∏–Ω–∏ –º–∏–ª–æ—Å–µ—Ä–¥–∏—è. –û–±–ª–∞–¥–∞–µ—Ç –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ—á–Ω—ã–º –∞—Ä–æ–º–∞—Ç–æ–º –æ—Ä—Ö–∏–¥–µ–∏, —Å–ª–∞–¥–∫–æ–≤–∞—Ç—ã–º –≤–∫—É—Å–æ–º –∏ –æ—Å–≤–µ–∂–∞—é—â–∏–º –ø–æ—Å–ª–µ–≤–∫—É—Å–∏–µ–º.',
    characteristics: {
      weight: '50 –≥—Ä–∞–º–º',
      brewing: '5-7 –ø—Ä–æ–ª–∏–≤–æ–≤',
      temperature: '90-95¬∞C',
      taste: '–¶–≤–µ—Ç–æ—á–Ω—ã–π, —Å–ª–∞–¥–∫–æ–≤–∞—Ç—ã–π, –æ—Å–≤–µ–∂–∞—é—â–∏–π'
    }
  }
];

export default function Index() {
  const [currentPage, setCurrentPage] = useState<'home' | 'catalog' | 'about' | 'delivery' | 'contacts' | 'product'>('home');
  const [cart, setCart] = useState<CartItem[]>([]);
  const [selectedCategory, setSelectedCategory] = useState<string>('–í—Å–µ');
  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);
  const [quantity, setQuantity] = useState<number>(1);

  const openProduct = (product: Product) => {
    setSelectedProduct(product);
    setQuantity(1);
    setCurrentPage('product');
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  const addToCartWithQuantity = (product: Product, qty: number) => {
    setCart(prev => {
      const existing = prev.find(item => item.id === product.id);
      if (existing) {
        return prev.map(item =>
          item.id === product.id ? { ...item, quantity: item.quantity + qty } : item
        );
      }
      return [...prev, { ...product, quantity: qty }];
    });
  };

  const categories = ['–í—Å–µ', '–£–ª—É–Ω', '–ë–µ–ª—ã–π —á–∞–π', '–ó–µ–ª—ë–Ω—ã–π —á–∞–π', '–ü—É—ç—Ä', '–ß—ë—Ä–Ω—ã–π —á–∞–π'];

  const addToCart = (product: Product) => {
    setCart(prev => {
      const existing = prev.find(item => item.id === product.id);
      if (existing) {
        return prev.map(item =>
          item.id === product.id ? { ...item, quantity: item.quantity + 1 } : item
        );
      }
      return [...prev, { ...product, quantity: 1 }];
    });
  };

  const removeFromCart = (id: number) => {
    setCart(prev => prev.filter(item => item.id !== id));
  };

  const updateQuantity = (id: number, quantity: number) => {
    if (quantity <= 0) {
      removeFromCart(id);
      return;
    }
    setCart(prev =>
      prev.map(item => (item.id === id ? { ...item, quantity } : item))
    );
  };

  const totalPrice = cart.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);

  const filteredProducts = selectedCategory === '–í—Å–µ' 
    ? products 
    : products.filter(p => p.category === selectedCategory);

  return (
    <div className="min-h-screen bg-background">
      <header className="sticky top-0 z-50 bg-white/95 backdrop-blur border-b border-border">
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <h1 className="text-3xl font-bold text-primary font-serif">TEALEAF</h1>
            
            <nav className="hidden md:flex gap-8">
              <button 
                onClick={() => setCurrentPage('home')} 
                className={`relative transition-colors ${currentPage === 'home' ? 'text-primary' : 'text-muted-foreground hover:text-primary'}`}
              >
                –ì–ª–∞–≤–Ω–∞—è
              </button>
              <button 
                onClick={() => setCurrentPage('catalog')} 
                className={`relative transition-colors ${currentPage === 'catalog' ? 'text-primary' : 'text-muted-foreground hover:text-primary'}`}
              >
                –ö–∞—Ç–∞–ª–æ–≥
              </button>
              <button 
                onClick={() => setCurrentPage('about')} 
                className={`relative transition-colors ${currentPage === 'about' ? 'text-primary' : 'text-muted-foreground hover:text-primary'}`}
              >
                –û –Ω–∞—Å
              </button>
              <button 
                onClick={() => setCurrentPage('delivery')} 
                className={`relative transition-colors ${currentPage === 'delivery' ? 'text-primary' : 'text-muted-foreground hover:text-primary'}`}
              >
                –î–æ—Å—Ç–∞–≤–∫–∞
              </button>
              <button 
                onClick={() => setCurrentPage('contacts')} 
                className={`relative transition-colors ${currentPage === 'contacts' ? 'text-primary' : 'text-muted-foreground hover:text-primary'}`}
              >
                –ö–æ–Ω—Ç–∞–∫—Ç—ã
              </button>
            </nav>

            <Sheet>
              <SheetTrigger asChild>
                <Button variant="outline" className="relative">
                  <Icon name="ShoppingCart" size={20} />
                  {totalItems > 0 && (
                    <Badge className="absolute -top-2 -right-2 h-5 w-5 flex items-center justify-center p-0 bg-secondary text-secondary-foreground">
                      {totalItems}
                    </Badge>
                  )}
                </Button>
              </SheetTrigger>
              <SheetContent className="w-full sm:max-w-lg">
                <SheetHeader>
                  <SheetTitle className="font-serif text-2xl">–ö–æ—Ä–∑–∏–Ω–∞</SheetTitle>
                </SheetHeader>
                <div className="mt-8 space-y-4">
                  {cart.length === 0 ? (
                    <p className="text-muted-foreground text-center py-8">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                  ) : (
                    <>
                      {cart.map(item => (
                        <div key={item.id} className="flex gap-4 pb-4 border-b border-border">
                          <div className="text-4xl">{item.image}</div>
                          <div className="flex-1">
                            <h3 className="font-serif font-semibold">{item.name}</h3>
                            <p className="text-sm text-muted-foreground">{item.price} ‚ÇΩ</p>
                            <div className="flex items-center gap-2 mt-2">
                              <Button
                                size="sm"
                                variant="outline"
                                onClick={() => updateQuantity(item.id, item.quantity - 1)}
                              >
                                <Icon name="Minus" size={14} />
                              </Button>
                              <span className="w-8 text-center">{item.quantity}</span>
                              <Button
                                size="sm"
                                variant="outline"
                                onClick={() => updateQuantity(item.id, item.quantity + 1)}
                              >
                                <Icon name="Plus" size={14} />
                              </Button>
                            </div>
                          </div>
                          <Button
                            size="sm"
                            variant="ghost"
                            onClick={() => removeFromCart(item.id)}
                          >
                            <Icon name="X" size={18} />
                          </Button>
                        </div>
                      ))}
                      <div className="pt-4">
                        <div className="flex justify-between text-lg font-semibold mb-4">
                          <span>–ò—Ç–æ–≥–æ:</span>
                          <span className="text-secondary">{totalPrice.toLocaleString()} ‚ÇΩ</span>
                        </div>
                        <Button className="w-full" size="lg">
                          –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                        </Button>
                      </div>
                    </>
                  )}
                </div>
              </SheetContent>
            </Sheet>
          </div>
        </div>
      </header>

      <main>
        {currentPage === 'home' && (
          <>
            <section className="relative py-24 bg-gradient-to-br from-primary/10 to-background">
              <div className="container mx-auto px-4">
                <div className="max-w-3xl mx-auto text-center animate-fade-in">
                  <h2 className="text-5xl md:text-6xl font-bold font-serif text-primary mb-6">
                    –ò—Å–∫—É—Å—Å—Ç–≤–æ —á–∞–µ–ø–∏—Ç–∏—è
                  </h2>
                  <p className="text-xl text-muted-foreground mb-8">
                    –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤ —á–∞—è —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –¥–ª—è –∏—Å—Ç–∏–Ω–Ω—ã—Ö —Ü–µ–Ω–∏—Ç–µ–ª–µ–π
                  </p>
                  <div className="flex gap-4 justify-center flex-wrap">
                    <Button size="lg" onClick={() => setCurrentPage('catalog')}>
                      –°–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥
                    </Button>
                    <Button size="lg" variant="outline" onClick={() => setCurrentPage('about')}>
                      –û –∫–æ–º–ø–∞–Ω–∏–∏
                    </Button>
                  </div>
                </div>
              </div>
            </section>

            <section className="py-16">
              <div className="container mx-auto px-4">
                <h3 className="text-3xl font-bold font-serif text-center mb-12">–ò–∑–±—Ä–∞–Ω–Ω—ã–µ —Å–æ—Ä—Ç–∞</h3>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  {products.slice(0, 3).map((product, idx) => (
                    <Card key={product.id} className="transition-transform duration-300 hover:scale-105 animate-fade-in cursor-pointer" style={{ animationDelay: `${idx * 100}ms` }} onClick={() => openProduct(product)}>
                      <CardContent className="pt-6">
                        <div className="text-6xl text-center mb-4">{product.image}</div>
                        <h4 className="text-xl font-serif font-semibold mb-2">{product.name}</h4>
                        <p className="text-sm text-muted-foreground mb-4">{product.description}</p>
                        <div className="flex gap-2 mb-4">
                          <Badge variant="secondary">{product.category}</Badge>
                          <Badge variant="outline">{product.origin}</Badge>
                        </div>
                      </CardContent>
                      <CardFooter className="flex justify-between items-center">
                        <span className="text-lg font-semibold text-secondary">{product.price} ‚ÇΩ</span>
                        <Button onClick={(e) => { e.stopPropagation(); addToCart(product); }}>
                          <Icon name="ShoppingCart" size={18} className="mr-2" />
                          –í –∫–æ—Ä–∑–∏–Ω—É
                        </Button>
                      </CardFooter>
                    </Card>
                  ))}
                </div>
              </div>
            </section>

            <section className="py-16 bg-muted/30">
              <div className="container mx-auto px-4">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8 text-center">
                  <div className="animate-fade-in">
                    <Icon name="Award" size={48} className="mx-auto mb-4 text-secondary" />
                    <h4 className="text-xl font-serif font-semibold mb-2">–ü—Ä–µ–º–∏–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ</h4>
                    <p className="text-muted-foreground">–¢–æ–ª—å–∫–æ –ª—É—á—à–∏–µ —Å–æ—Ä—Ç–∞ –æ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤</p>
                  </div>
                  <div className="animate-fade-in" style={{ animationDelay: '100ms' }}>
                    <Icon name="Truck" size={48} className="mx-auto mb-4 text-secondary" />
                    <h4 className="text-xl font-serif font-semibold mb-2">–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</h4>
                    <p className="text-muted-foreground">–î–æ—Å—Ç–∞–≤–∏–º —Å–≤–µ–∂–∏–π —á–∞–π –≤ —Ç–µ—á–µ–Ω–∏–µ 1-3 –¥–Ω–µ–π</p>
                  </div>
                  <div className="animate-fade-in" style={{ animationDelay: '200ms' }}>
                    <Icon name="Heart" size={48} className="mx-auto mb-4 text-secondary" />
                    <h4 className="text-xl font-serif font-semibold mb-2">–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
                    <p className="text-muted-foreground">–ü–æ–º–æ–∂–µ–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∏–¥–µ–∞–ª—å–Ω—ã–π —á–∞–π</p>
                  </div>
                </div>
              </div>
            </section>
          </>
        )}

        {currentPage === 'catalog' && (
          <section className="py-16">
            <div className="container mx-auto px-4">
              <h2 className="text-4xl font-bold font-serif text-center mb-8">–ö–∞—Ç–∞–ª–æ–≥ —á–∞—è</h2>
              
              <div className="flex gap-2 mb-8 flex-wrap justify-center">
                {categories.map(cat => (
                  <Button
                    key={cat}
                    variant={selectedCategory === cat ? 'default' : 'outline'}
                    onClick={() => setSelectedCategory(cat)}
                  >
                    {cat}
                  </Button>
                ))}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                {filteredProducts.map((product, idx) => (
                  <Card key={product.id} className="transition-transform duration-300 hover:scale-105 animate-fade-in cursor-pointer" style={{ animationDelay: `${idx * 50}ms` }} onClick={() => openProduct(product)}>
                    <CardContent className="pt-6">
                      <div className="text-6xl text-center mb-4">{product.image}</div>
                      <h4 className="text-xl font-serif font-semibold mb-2">{product.name}</h4>
                      <p className="text-sm text-muted-foreground mb-4">{product.description}</p>
                      <div className="flex gap-2 mb-4">
                        <Badge variant="secondary">{product.category}</Badge>
                        <Badge variant="outline">{product.origin}</Badge>
                      </div>
                    </CardContent>
                    <CardFooter className="flex justify-between items-center">
                      <span className="text-lg font-semibold text-secondary">{product.price} ‚ÇΩ</span>
                      <Button onClick={(e) => { e.stopPropagation(); addToCart(product); }}>
                        <Icon name="ShoppingCart" size={18} className="mr-2" />
                        –í –∫–æ—Ä–∑–∏–Ω—É
                      </Button>
                    </CardFooter>
                  </Card>
                ))}
              </div>
            </div>
          </section>
        )}

        {currentPage === 'about' && (
          <section className="py-16">
            <div className="container mx-auto px-4 max-w-3xl">
              <h2 className="text-4xl font-bold font-serif text-center mb-8 animate-fade-in">–û –∫–æ–º–ø–∞–Ω–∏–∏</h2>
              <div className="prose prose-lg mx-auto text-muted-foreground space-y-6 animate-fade-in">
                <p>
                  TEALEAF ‚Äî —ç—Ç–æ –±–æ–ª—å—à–µ —á–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω. –≠—Ç–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –ª—é–¥–µ–π, –≤–ª—é–±–ª—ë–Ω–Ω—ã—Ö –≤ –∫—É–ª—å—Ç—É—Ä—É —á–∞—è –∏ —Å—Ç—Ä–µ–º—è—â–∏—Ö—Å—è –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É –≤ –∫–∞–∂–¥–æ–π —á–∞—à–∫–µ.
                </p>
                <p>
                  –ú—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤—É–µ–º –ø–æ —á–∞–π–Ω—ã–º –ø–ª–∞–Ω—Ç–∞—Ü–∏—è–º –ö–∏—Ç–∞—è, –Ø–ø–æ–Ω–∏–∏, –ò–Ω–¥–∏–∏ –∏ –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω, —á—Ç–æ–±—ã –Ω–∞—Ö–æ–¥–∏—Ç—å –∏ –ø—Ä–∏–≤–æ–∑–∏—Ç—å –≤–∞–º —Å–∞–º—ã–µ –∏–∑—ã—Å–∫–∞–Ω–Ω—ã–µ –∏ —Ä–µ–¥–∫–∏–µ —Å–æ—Ä—Ç–∞. –ö–∞–∂–¥—ã–π —á–∞–π –≤ –Ω–∞—à–µ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Å—Ç—Ä–æ–≥–∏–π –æ—Ç–±–æ—Ä –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—à–∏–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏.
                </p>
                <p>
                  –ù–∞—à–∞ –º–∏—Å—Å–∏—è ‚Äî —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —á–∞–π –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –≤—Å–µ—Ö —Ü–µ–Ω–∏—Ç–µ–ª–µ–π –∏ –ø–æ–º–æ—á—å –∫–∞–∂–¥–æ–º—É –æ—Ç–∫—Ä—ã—Ç—å –¥–ª—è —Å–µ–±—è —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π –º–∏—Ä —á–∞–π–Ω–æ–π –∫—É–ª—å—Ç—É—Ä—ã.
                </p>
              </div>
            </div>
          </section>
        )}

        {currentPage === 'delivery' && (
          <section className="py-16">
            <div className="container mx-auto px-4 max-w-3xl">
              <h2 className="text-4xl font-bold font-serif text-center mb-8 animate-fade-in">–î–æ—Å—Ç–∞–≤–∫–∞ –∏ –æ–ø–ª–∞—Ç–∞</h2>
              <div className="space-y-8 animate-fade-in">
                <Card>
                  <CardContent className="pt-6">
                    <h3 className="text-xl font-serif font-semibold mb-4 flex items-center gap-2">
                      <Icon name="Truck" size={24} className="text-secondary" />
                      –£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏
                    </h3>
                    <ul className="space-y-2 text-muted-foreground">
                      <li>‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –æ—Ç 5 000 ‚ÇΩ</li>
                      <li>‚Ä¢ –ö—É—Ä—å–µ—Ä—Å–∫–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ú–æ—Å–∫–≤–µ ‚Äî 300 ‚ÇΩ</li>
                      <li>‚Ä¢ –î–æ—Å—Ç–∞–≤–∫–∞ –≤ —Ä–µ–≥–∏–æ–Ω—ã ‚Äî –æ—Ç 400 ‚ÇΩ</li>
                      <li>‚Ä¢ –°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 1-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è</li>
                    </ul>
                  </CardContent>
                </Card>

                <Card>
                  <CardContent className="pt-6">
                    <h3 className="text-xl font-serif font-semibold mb-4 flex items-center gap-2">
                      <Icon name="CreditCard" size={24} className="text-secondary" />
                      –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã
                    </h3>
                    <ul className="space-y-2 text-muted-foreground">
                      <li>‚Ä¢ –û–ø–ª–∞—Ç–∞ –∫–∞—Ä—Ç–æ–π –æ–Ω–ª–∞–π–Ω</li>
                      <li>‚Ä¢ –ù–∞–ª–∏—á–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä—É</li>
                      <li>‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–π –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –ª–∏—Ü</li>
                    </ul>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>
        )}

        {currentPage === 'contacts' && (
          <section className="py-16">
            <div className="container mx-auto px-4 max-w-3xl">
              <h2 className="text-4xl font-bold font-serif text-center mb-8 animate-fade-in">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
              <div className="space-y-6 animate-fade-in">
                <Card>
                  <CardContent className="pt-6 space-y-4">
                    <div className="flex items-start gap-3">
                      <Icon name="MapPin" size={24} className="text-secondary mt-1" />
                      <div>
                        <h3 className="font-semibold mb-1">–ê–¥—Ä–µ—Å</h3>
                        <p className="text-muted-foreground">–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ß–∞–π–Ω–∞—è, –¥. 15</p>
                      </div>
                    </div>
                    <div className="flex items-start gap-3">
                      <Icon name="Phone" size={24} className="text-secondary mt-1" />
                      <div>
                        <h3 className="font-semibold mb-1">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                        <p className="text-muted-foreground">+7 (495) 123-45-67</p>
                      </div>
                    </div>
                    <div className="flex items-start gap-3">
                      <Icon name="Mail" size={24} className="text-secondary mt-1" />
                      <div>
                        <h3 className="font-semibold mb-1">Email</h3>
                        <p className="text-muted-foreground">info@tealeaf.ru</p>
                      </div>
                    </div>
                    <div className="flex items-start gap-3">
                      <Icon name="Clock" size={24} className="text-secondary mt-1" />
                      <div>
                        <h3 className="font-semibold mb-1">–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã</h3>
                        <p className="text-muted-foreground">–ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 10:00 –¥–æ 20:00</p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>
            </div>
          </section>
        )}

        {currentPage === 'product' && selectedProduct && (
          <section className="py-16">
            <div className="container mx-auto px-4">
              <Button 
                variant="ghost" 
                onClick={() => setCurrentPage('catalog')} 
                className="mb-8"
              >
                <Icon name="ArrowLeft" size={20} className="mr-2" />
                –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
              </Button>

              <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 animate-fade-in">
                <div className="bg-gradient-to-br from-muted/30 to-background rounded-lg p-12 flex items-center justify-center">
                  <div className="text-9xl">{selectedProduct.image}</div>
                </div>

                <div className="space-y-6">
                  <div>
                    <div className="flex gap-2 mb-4">
                      <Badge variant="secondary">{selectedProduct.category}</Badge>
                      <Badge variant="outline">{selectedProduct.origin}</Badge>
                    </div>
                    <h1 className="text-4xl md:text-5xl font-bold font-serif text-primary mb-4">
                      {selectedProduct.name}
                    </h1>
                    <p className="text-2xl font-semibold text-secondary mb-6">
                      {selectedProduct.price} ‚ÇΩ
                    </p>
                  </div>

                  <div className="prose prose-lg text-muted-foreground">
                    <p>{selectedProduct.fullDescription}</p>
                  </div>

                  {selectedProduct.characteristics && (
                    <Card>
                      <CardContent className="pt-6">
                        <h3 className="text-xl font-serif font-semibold mb-4">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
                        <div className="space-y-3">
                          <div className="flex justify-between py-2 border-b border-border">
                            <span className="text-muted-foreground">–í–µ—Å:</span>
                            <span className="font-medium">{selectedProduct.characteristics.weight}</span>
                          </div>
                          <div className="flex justify-between py-2 border-b border-border">
                            <span className="text-muted-foreground">–ó–∞–≤–∞—Ä–∏–≤–∞–Ω–∏–µ:</span>
                            <span className="font-medium">{selectedProduct.characteristics.brewing}</span>
                          </div>
                          <div className="flex justify-between py-2 border-b border-border">
                            <span className="text-muted-foreground">–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</span>
                            <span className="font-medium">{selectedProduct.characteristics.temperature}</span>
                          </div>
                          <div className="flex justify-between py-2">
                            <span className="text-muted-foreground">–í–∫—É—Å:</span>
                            <span className="font-medium">{selectedProduct.characteristics.taste}</span>
                          </div>
                        </div>
                      </CardContent>
                    </Card>
                  )}

                  <div className="flex items-center gap-4 pt-4">
                    <div className="flex items-center gap-2">
                      <Button
                        variant="outline"
                        size="icon"
                        onClick={() => setQuantity(Math.max(1, quantity - 1))}
                      >
                        <Icon name="Minus" size={18} />
                      </Button>
                      <span className="w-12 text-center text-lg font-semibold">{quantity}</span>
                      <Button
                        variant="outline"
                        size="icon"
                        onClick={() => setQuantity(quantity + 1)}
                      >
                        <Icon name="Plus" size={18} />
                      </Button>
                    </div>
                    <Button 
                      size="lg" 
                      className="flex-1"
                      onClick={() => {
                        addToCartWithQuantity(selectedProduct, quantity);
                        setQuantity(1);
                      }}
                    >
                      <Icon name="ShoppingCart" size={20} className="mr-2" />
                      –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É –∑–∞ {(selectedProduct.price * quantity).toLocaleString()} ‚ÇΩ
                    </Button>
                  </div>

                  <div className="bg-muted/30 rounded-lg p-6 space-y-3">
                    <div className="flex items-center gap-3">
                      <Icon name="Truck" size={24} className="text-secondary" />
                      <span className="text-sm">–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 5 000 ‚ÇΩ</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <Icon name="Shield" size={24} className="text-secondary" />
                      <span className="text-sm">–ì–∞—Ä–∞–Ω—Ç–∏—è —Å–≤–µ–∂–µ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <Icon name="Award" size={24} className="text-secondary" />
                      <span className="text-sm">–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø—Ä–æ–¥—É–∫—Ü–∏—è</span>
                    </div>
                  </div>
                </div>
              </div>

              <div className="mt-16">
                <h3 className="text-3xl font-bold font-serif text-center mb-12">–ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã</h3>
                <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
                  {products
                    .filter(p => p.category === selectedProduct.category && p.id !== selectedProduct.id)
                    .slice(0, 3)
                    .map((product, idx) => (
                      <Card 
                        key={product.id} 
                        className="transition-transform duration-300 hover:scale-105 animate-fade-in cursor-pointer" 
                        style={{ animationDelay: `${idx * 100}ms` }}
                        onClick={() => openProduct(product)}
                      >
                        <CardContent className="pt-6">
                          <div className="text-6xl text-center mb-4">{product.image}</div>
                          <h4 className="text-xl font-serif font-semibold mb-2">{product.name}</h4>
                          <p className="text-sm text-muted-foreground mb-4">{product.description}</p>
                          <div className="flex gap-2 mb-4">
                            <Badge variant="secondary">{product.category}</Badge>
                            <Badge variant="outline">{product.origin}</Badge>
                          </div>
                        </CardContent>
                        <CardFooter className="flex justify-between items-center">
                          <span className="text-lg font-semibold text-secondary">{product.price} ‚ÇΩ</span>
                          <Button onClick={(e) => { e.stopPropagation(); addToCart(product); }}>
                            <Icon name="ShoppingCart" size={18} className="mr-2" />
                            –í –∫–æ—Ä–∑–∏–Ω—É
                          </Button>
                        </CardFooter>
                      </Card>
                    ))}
                </div>
              </div>
            </div>
          </section>
        )}
      </main>

      <footer className="bg-primary text-primary-foreground py-8 mt-16">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row justify-between items-center gap-4">
            <p className="font-serif text-2xl">TEALEAF</p>
            <p className="text-sm">¬© 2024 TEALEAF. –ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —á–∞–π –¥–ª—è —Ü–µ–Ω–∏—Ç–µ–ª–µ–π</p>
            <div className="flex gap-4">
              <Icon name="Instagram" size={24} className="cursor-pointer hover:opacity-80 transition-opacity" />
              <Icon name="Facebook" size={24} className="cursor-pointer hover:opacity-80 transition-opacity" />
              <Icon name="Mail" size={24} className="cursor-pointer hover:opacity-80 transition-opacity" />
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
}